stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - publish
  - deploy

build-job: # This job runs in the build stage, which runs first.
  image: maven:latest
  stage: build
  script:
    - 'cd Backend-Spring-Boot'
    - mvn clean
    - echo "Compiling the code."
    - mvn compile
    - echo "Compile complete."

test-job: # This job runs in the test stage.
  image: maven:latest
  stage: test # It only starts when the job in the build stage completes successfully.
  script:
    - 'cd Backend-Spring-Boot'
    - echo "Running unit tests... This will take about 60 seconds."
    - mvn test
    - echo "Code coverage is 90%"

# package-job: # This job runs in the package stage.
#   stage: package # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - 'cd Backend-Spring-Boot'
#     - echo "Packaging application..."
#     - mvn package
#     - echo "Application successfully packaged."

publish:
  image: docker:latest
  stage: publish
  tags:
    - test-runner
  variables:
    # these values may need to be different if using TLS, k8s, etc.
    # You can alternatively set defaults in your runner config
    DOCKER TLS CERTDIR: ''
    DOCKER_HOST: 'tcp://docker:2375'
  services:
    - docker:dind
  script:
    # - cd Backend-Spring-Boot
    - pwd
    - echo $SERVER_IP
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
    - docker build -t docker.io/group11csci5308/test:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/group11csci5308/test:$CI_COMMIT_SHORT_SHA
  only:
    - feat-backend-hosting-ci-cd

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - test-runner
  script:
    - 'cd Backend-Spring-Boot'
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/group11csci5308/test:$CI_COMMIT_SHORT_SHA"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f my-app || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8073:8073 --name my-app docker.io/shahmehil/test:$CI_COMMIT_SHORT_SHA"
  environment:
    name: production
    url: http://172.17.1.211:8073
  only:
    - feat-backend-hosting-ci-cd
